CODEX RULES AND CODEBASE STRUCTURE

📜 RULES FOR CODEX

1. This file must always be kept UPDATED.
   - Any time a new script is created, renamed, or removed, Codex should update this file.
   - Any time a script’s **purpose** or **connections** change, update its description.

2. This file serves as a LIVE MAP of the codebase.
   - Codex should read from this to understand structure instead of scanning everything.
   - Codex should write to this to reflect the latest structure after code changes.

3. This is the central record for:
   - Script names and locations
   - Their purpose
   - What other modules they call or interact with
   - Their current state (working, stub, needs update, etc)

🔧 CURRENT CODEBASE STRUCTURE

📁 Docs
disclaimer.txt – project legality statement
important_notes_for_codex.txt – usage context and rules
codex_rules_and_structure.txt – this file

📁 Scripts  
├── 📁 General Tools
│   ├── `SimpleESP.lua`
│   │   ↳ Provides basic Highlight-based ESP for other players.
│   │   ↳ Exposes Enable/Disable functions used by UI toggle buttons.
│   ├── `AIMovement.lua`
│   │   ↳ Tween-based step movement toward a destination.
│   │   ↳ Moves every 0.3s until within 2 studs of the goal.
│   ├── `AIMovementUI.lua`
│   │   ↳ Floating UI to set target and start/stop AIMovement.
│   │   ↳ Displays brief debug messages while moving.
│   ↳ Folder may contain other utilities like fly, speed, noclip, etc.

├── 📁 Research Tools
│   └── `Character Info Watcher.lua`
│       ↳ Module providing Enable/Disable for a character stats watcher GUI.
│       ↳ Used for introspection, debugging, or stat analysis.
│       ↳ May expand to track other player or game data.

├── 📁 Steal a Baddie Project  
│   ├── `autostealer.lua` – Part 1  
│   │   ↳ Original working script to perform stealing logic.  
│   ├── `autotp and stealer fail.lua` – Part 2  
│   │   ↳ Combined TP and steal attempt; doesn’t fully function.  
│   └── `combined_auto_tp_stealer.lua` – Final  
│       ↳ Merges TP and steal logic correctly.  
│       ↳ Fully working version of the project.  
│       ↳ Main execution target for this module.

├── 📁 UiLib
│   ├── `MainUI.lua`
│   │   ↳ Main UI layout converted to script via Gui-to-Lua.
│   │   ↳ Builds entire GUI, returns references to key objects.
│   │   ↳ Used as the foundation for all UI logic and rendering.
│   │   ↳ Includes: Background, Side menu, Grid/List scrolling frames, Personal info, etc.
│   │   ↳ Provides GridTemplate and ListTemplate buttons for cloning.

│   ├── `AddMenuButton.lua`
│   │   ↳ Utility module for dynamically adding buttons to the Side menu.
│   │   ↳ Handles template cloning, text assignment, callback binding.
│   │   ↳ Used by sidebar.lua to create navigation buttons.
│   ├── `AddToggleGridButton.lua`
│   │   ↳ Returns CreateController() to build isolated toggle controllers.
│   │   ↳ Each controller manages its own buttons and Reset logic.
│   ├── `pages.lua`
│   │   ↳ Clones entire scrolling frame templates from MainUI for each page.
│   │   ↳ Each page owns its cloned frame and button template.
│   │   ↳ showPage toggles which frame is visible.
│   ├── `sidebar.lua`
│   │   ↳ Builds the sidebar menu using AddMenuButton.
│   │   ↳ Connects sidebar buttons to pages.lua page switching.
│   ├── `default_buttons.lua`
│   │   ↳ Populates pages with toggleable grid buttons.
│   │   ↳ Adds "Character Info Watcher" to Research, "Simple ESP" to General,
│   │     and "Steal a Baddie" to StealGames.
│   │   ↳ Uses AddToggleGridButton to load modules on demand.
│   └── `loader.lua`
│       ↳ Master loader hub for the UI library.
│       ↳ Dynamically fetches and executes MainUI.lua, pages.lua, and sidebar.lua.
│       ↳ Sets player info and avatar viewport, and wires menu/X buttons for toggling the UI.
│       ↳ Prints progress for debugging while doing minimal environment setup.
